version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq-enterprise
    hostname: rabbitmq-enterprise
    ports:
      - "5672:5672"   # AMQP protocol
      - "15672:15672" # Management UI
      - "15692:15692" # Prometheus metrics
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123
      RABBITMQ_DEFAULT_VHOST: /
      RABBITMQ_ERLANG_COOKIE: SWQOKODSQALRPCLNMEQG
      RABBITMQ_PLUGINS_EXPAND_DIR: /var/lib/rabbitmq/plugins
      RABBITMQ_PLUGINS_DIR: /var/lib/rabbitmq/plugins
      RABBITMQ_ENABLED_PLUGINS_FILE: /etc/rabbitmq/enabled_plugins
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_logs:/var/log/rabbitmq
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      - ./enabled_plugins:/etc/rabbitmq/enabled_plugins:ro
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - rabbitmq-network

  # Redis for event store and CQRS projections
  redis:
    image: redis:7-alpine
    container_name: redis-event-store
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - rabbitmq-network

  # PostgreSQL for saga state and event sourcing
  postgres:
    image: postgres:15-alpine
    container_name: postgres-saga-store
    environment:
      POSTGRES_DB: saga_store
      POSTGRES_USER: saga_user
      POSTGRES_PASSWORD: saga_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-saga-db.sql:/docker-entrypoint-initdb.d/init-saga-db.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U saga_user -d saga_store"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - rabbitmq-network

  # Prometheus for metrics and monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-metrics
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - rabbitmq-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana-dashboard
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin123
      GF_USERS_ALLOW_SIGN_UP: false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    networks:
      - rabbitmq-network

volumes:
  rabbitmq_data:
    driver: local
  rabbitmq_logs:
    driver: local
  redis_data:
    driver: local
  postgres_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  rabbitmq-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 